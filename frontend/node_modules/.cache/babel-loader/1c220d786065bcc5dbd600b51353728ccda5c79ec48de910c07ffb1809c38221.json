{"ast":null,"code":"// Import packages\nimport React,{useState,useEffect}from'react';import{GoogleMap,LoadScript,Marker}from'@react-google-maps/api';import{useDispatch,useSelector}from'react-redux';import{setLocation}from'../redux/actions';import'../styles/CrimeMap.css';import ReportForm from'../components/ReportForm';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const mapStyles=[{featureType:\"poi\",elementType:\"labels\",stylers:[{visibility:\"off\"}],disableDoubleClickZoom:true,// Add this line\nclickableIcons:false}];const CrimeMap=()=>{const dispatch=useDispatch();const[markerPosition,setMarkerPosition]=useState(null);const[address,setAddress]=useState(\"\");// String or null value, will be initialized to null when app starts\nconst[map,setMap]=useState(null);const[mapCenter,setMapCenter]=useState({lat:37.8044,lng:-122.2712});// Initial center\nconst[locations,setLocations]=useState([]);const[isGoogleMapsLoaded,setIsGoogleMapsLoaded]=useState(false);const date=useSelector(state=>state.form.date);const geocodeLatLng=async(lat,lng)=>{const geocoder=new google.maps.Geocoder();const latlng={lat,lng};return new Promise((resolve,reject)=>{geocoder.geocode({location:latlng},(results,status)=>{if(status===\"OK\"){if(results&&results[0]){resolve(results[0].formatted_address);}else{reject(\"No results found\");}}else{reject(\"Geocoder failed due to: \"+status);}});});};// Fetch Locations\n// Use useEffect to fetch data when the component mounts.\n// Use useEffect to fetch data when the component mounts.\nuseEffect(()=>{if(isGoogleMapsLoaded){// Define an async function to fetch locations from the server.\nconst fetchLocations=async()=>{try{// Make a GET request to the server to retrieve the collection.\nconst response=await axios.get('http://localhost:5038/todoappcollection');// Extract the location strings from the response data.\nconst locationStrings=response.data.map(item=>item.location);// Initialize the geocoder object.\nconst geocoder=new google.maps.Geocoder();// Iterate over each location string to geocode them.\nfor(const locationString of locationStrings){// Use the geocoder to convert the address to lat/lng coordinates.\ngeocoder.geocode({address:locationString},(results,status)=>{if(status==='OK'&&results!==null&&results!==void 0&&results[0]){console.log('Geocoded String');// If geocoding is successful, get the location from the results.\nconst{location}=results[0].geometry;// Update the locations state with the new coordinates.\nsetLocations(prevLocations=>[...prevLocations,{lat:location.lat(),lng:location.lng()}]);}else{// Log an error if geocoding was not successful.\nconsole.error('Geocode was not successful for the following reason:',status);}});}}catch(error){// Log any errors that occur during the fetch.\nconsole.error(\"Error fetching locations:\",error);}};fetchLocations();}// Call the function to fetch locations.\n},[isGoogleMapsLoaded,date]);const handleMapClick=async event=>{const latitude=event.latLng.lat();const longitude=event.latLng.lng();const newCenter={lat:latitude,lng:longitude};setMapCenter(newCenter);setMarkerPosition({lat:latitude,lng:longitude});map===null||map===void 0?void 0:map.panTo(new google.maps.LatLng(latitude,longitude));try{const fetchedAddress=await geocodeLatLng(latitude,longitude);// Using await here\nsetAddress(fetchedAddress);dispatch(setLocation(fetchedAddress));}catch(error){console.error(\"Error getting address:\",error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"crime-map-wrapper\",children:/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:'AIzaSyCLu25wqirs0pAPnvjvH4hV4Se7Kcpzmps',onLoad:()=>setIsGoogleMapsLoaded(true),children:/*#__PURE__*/_jsxs(GoogleMap,{mapContainerClassName:\"crime-map-container\",center:mapCenter// Default center (San Francisco)\n,zoom:13,onClick:handleMapClick,onLoad:map=>setMap(map),options:{styles:mapStyles,disableDoubleClickZoom:true,mapTypeControl:false,clickableIcons:false},children:[/*#__PURE__*/_jsx(ReportForm,{}),markerPosition&&/*#__PURE__*/_jsx(Marker,{position:markerPosition}),locations.map((location,index)=>/*#__PURE__*/_jsx(Marker,{position:location},index))]})})});};export default CrimeMap;//  \n// Issues to fix after lunch. Fix how it looks in mobile. \n// Setup Database\n// Check for anymore other errors when using. \n// Retype each line of code so you remember how to use it. \n// 11/06\n// Google map markers completed. Database is setup. \n// Don't see apps on mobile device for some reason?","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","useDispatch","useSelector","setLocation","ReportForm","axios","jsx","_jsx","jsxs","_jsxs","mapStyles","featureType","elementType","stylers","visibility","disableDoubleClickZoom","clickableIcons","CrimeMap","dispatch","markerPosition","setMarkerPosition","address","setAddress","map","setMap","mapCenter","setMapCenter","lat","lng","locations","setLocations","isGoogleMapsLoaded","setIsGoogleMapsLoaded","date","state","form","geocodeLatLng","geocoder","google","maps","Geocoder","latlng","Promise","resolve","reject","geocode","location","results","status","formatted_address","fetchLocations","response","get","locationStrings","data","item","locationString","console","log","geometry","prevLocations","error","handleMapClick","event","latitude","latLng","longitude","newCenter","panTo","LatLng","fetchedAddress","className","children","googleMapsApiKey","onLoad","mapContainerClassName","center","zoom","onClick","options","styles","mapTypeControl","position","index"],"sources":["/Users/davisnguyen/projects/crimecompass/frontend/src/components/CrimeMap.tsx"],"sourcesContent":["// Import packages\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLocation } from '../redux/actions';\nimport '../styles/CrimeMap.css';\nimport ReportForm from '../components/ReportForm';\nimport axios from 'axios';\n\nconst mapStyles = [\n    {\n        featureType: \"poi\",\n        elementType: \"labels\",\n        stylers: [\n            { visibility: \"off\"}\n        ],\n        disableDoubleClickZoom: true,  // Add this line\n        clickableIcons: false,\n\n    }\n];\n\nconst CrimeMap: React.FC = () => {\n    const dispatch = useDispatch();\n    const [markerPosition, setMarkerPosition] = useState<{ lat: number, lng: number } | null>(null);\n    const [address, setAddress] = useState<string | null>(\"\"); // String or null value, will be initialized to null when app starts\n    const [map, setMap] = useState<google.maps.Map | null>(null);\n\n    const [mapCenter, setMapCenter] = useState({ lat: 37.8044, lng: -122.2712 }); // Initial center\n    const [locations, setLocations] = useState<{ lat: number, lng: number}[]>([]);\n\n    const [isGoogleMapsLoaded, setIsGoogleMapsLoaded] = useState(false);\n\n    const date = useSelector((state: any) => state.form.date);\n\n\n    const geocodeLatLng = async (lat: number, lng: number) => {\n        const geocoder = new google.maps.Geocoder();\n        const latlng = { lat, lng };\n        return new Promise<string>((resolve, reject) => {\n            geocoder.geocode({ location: latlng }, (results, status) => {\n                if (status === \"OK\") {\n                    if (results && results[0]) {\n                        resolve(results[0].formatted_address);\n                    } else {\n                        reject(\"No results found\");\n                    }\n                } else {\n                    reject(\"Geocoder failed due to: \" + status);\n                }\n            });\n        });\n    };\n\n    // Fetch Locations\n    // Use useEffect to fetch data when the component mounts.\n\n\n    \n  // Use useEffect to fetch data when the component mounts.\n  useEffect(() => {\n    if (isGoogleMapsLoaded) {\n        // Define an async function to fetch locations from the server.\n        const fetchLocations = async () => {\n        try {\n            // Make a GET request to the server to retrieve the collection.\n            const response = await axios.get('http://localhost:5038/todoappcollection');\n            // Extract the location strings from the response data.\n            const locationStrings = response.data.map((item: any) => item.location);\n\n            // Initialize the geocoder object.\n            const geocoder = new google.maps.Geocoder();\n            // Iterate over each location string to geocode them.\n            for (const locationString of locationStrings) {\n            // Use the geocoder to convert the address to lat/lng coordinates.\n            geocoder.geocode({ address: locationString }, (results, status) => {\n                if (status === 'OK' && results?.[0]) {\n                console.log('Geocoded String')\n                // If geocoding is successful, get the location from the results.\n                const { location } = results[0].geometry;\n                // Update the locations state with the new coordinates.\n                setLocations(prevLocations => [...prevLocations, { lat: location.lat(), lng: location.lng() }]);\n                } else {\n                // Log an error if geocoding was not successful.\n                console.error('Geocode was not successful for the following reason:', status);\n                }\n            });\n            }\n        } catch (error) {\n            // Log any errors that occur during the fetch.\n            console.error(\"Error fetching locations:\", error);\n        }\n        };\n\n        fetchLocations();\n    }\n    // Call the function to fetch locations.\n    \n  }, [isGoogleMapsLoaded, date]);\n\n    \n\n\n\n\n    \n\n\n    const handleMapClick = async (event: any) => {\n        const latitude = event.latLng.lat();\n        const longitude = event.latLng.lng();\n        const newCenter = {lat: latitude, lng:longitude};\n        setMapCenter(newCenter);\n        setMarkerPosition({ lat: latitude, lng: longitude });\n\n        map?.panTo(new google.maps.LatLng(latitude, longitude));\n    \n        try {\n            const fetchedAddress = await geocodeLatLng(latitude, longitude); // Using await here\n            setAddress(fetchedAddress);\n            dispatch(setLocation(fetchedAddress))\n\n        } catch (error) {\n            console.error(\"Error getting address:\", error);\n        }\n    };\n    \n\n    return (\n        <div className=\"crime-map-wrapper\">\n            <LoadScript googleMapsApiKey={'AIzaSyCLu25wqirs0pAPnvjvH4hV4Se7Kcpzmps'} onLoad={() => setIsGoogleMapsLoaded(true)}>\n                \n                <GoogleMap\n                    mapContainerClassName=\"crime-map-container\"\n                    center={mapCenter} // Default center (San Francisco)\n                    zoom={13}\n                    onClick={handleMapClick}\n                    onLoad={map => setMap(map)}\n                    options={{ \n                        styles: mapStyles, \n                        disableDoubleClickZoom: true,\n                        mapTypeControl: false,\n                        clickableIcons: false,\n                    }}\n                >\n                    <ReportForm/>\n\n                    {markerPosition && <Marker position={markerPosition} />}\n                    {locations.map((location, index) => (\n                        <Marker key={index} position={location} />\n                    ))}\n                </GoogleMap>\n            </LoadScript>\n\n        </div>\n    )\n}\nexport default CrimeMap;\n\n//  \n// Issues to fix after lunch. Fix how it looks in mobile. \n// Setup Database\n// Check for anymore other errors when using. \n// Retype each line of code so you remember how to use it. \n\n\n// 11/06\n// Google map markers completed. Database is setup. \n// Don't see apps on mobile device for some reason? "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}